{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string';\nimport jwt_decode from 'jwt-decode';\nimport getData from './getData';\nimport { toast } from 'react-toastify';\nimport { logoutSuccess } from '../redux/authSlice';\nconst baseURL = 'http://localhost:8080/api';\nexport const axiosClient = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  withCredentials: true,\n  paramsSerializer: params => queryString.stringify(params)\n});\nconst refreshToken = async user => {\n  const res = await axiosClient.post('/auth/refreshtoken', {\n    refreshToken: user.refreshToken\n  }, {\n    headers: {\n      Authorization: `Bearer ${user.accessToken}`\n    }\n  });\n  console.log(res);\n  return res.data;\n};\nexport const axiosInstance = (user, dispatch, stateSuccess) => {\n  const newInstance = axios.create({\n    baseURL: baseURL,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    paramsSerializer: params => queryString.stringify(params)\n  });\n  newInstance.interceptors.request.use(async config => {\n    let date = new Date();\n    const decodeToken = jwt_decode(user === null || user === void 0 ? void 0 : user.accessToken);\n    if (decodeToken.exp < date.getTime() / 1000) {\n      try {\n        const newAccessToken = getData(await refreshToken(user));\n        const newUser = {\n          ...user,\n          accessToken: newAccessToken.accessToken\n        };\n        dispatch(stateSuccess(newUser));\n        config.headers['Authorization'] = `Bearer ${newAccessToken.accessToken}`;\n      } catch (error) {\n        var _error$response, _error$response$data, _error$response$data$;\n        let msg = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.details) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || \"Hết phiên đăng nhập\";\n        toast.error(msg);\n        dispatch(logoutSuccess());\n      }\n    } else {\n      config.headers['Authorization'] = `Bearer ${user.accessToken}`;\n    }\n    return config;\n  }, err => {\n    return Promise.reject(err);\n  });\n  return newInstance;\n};","map":{"version":3,"names":["axios","queryString","jwt_decode","getData","toast","logoutSuccess","baseURL","axiosClient","create","headers","withCredentials","paramsSerializer","params","stringify","refreshToken","user","res","post","Authorization","accessToken","console","log","data","axiosInstance","dispatch","stateSuccess","newInstance","interceptors","request","use","config","date","Date","decodeToken","exp","getTime","newAccessToken","newUser","error","_error$response","_error$response$data","_error$response$data$","msg","response","details","message","err","Promise","reject"],"sources":["/Users/hongdinh/Code/GitHub_Clone/nhom3_webdocsach/FE/src/api/axiosClient.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport jwt_decode from 'jwt-decode';\r\nimport getData from './getData';\r\nimport { toast } from 'react-toastify';\r\nimport { logoutSuccess } from '../redux/authSlice';\r\nconst baseURL = 'http://localhost:8080/api'\r\nexport const axiosClient = axios.create({\r\n    baseURL: baseURL,\r\n\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n    withCredentials: true,\r\n    paramsSerializer: (params) => queryString.stringify(params)\r\n});\r\n\r\n\r\n\r\nconst refreshToken = async (user) => {\r\n    const res = await axiosClient.post('/auth/refreshtoken', { refreshToken: user.refreshToken }, { headers: { Authorization: `Bearer ${user.accessToken}` }, })\r\n    console.log(res)\r\n    return res.data\r\n}\r\n\r\nexport const axiosInstance = (user, dispatch, stateSuccess) => {\r\n    const newInstance = axios.create({\r\n        baseURL: baseURL,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        paramsSerializer: (params) => queryString.stringify(params)\r\n    });\r\n    newInstance.interceptors.request.use(\r\n        async (config) => {\r\n            let date = new Date();\r\n            const decodeToken = jwt_decode(user?.accessToken);\r\n            if (decodeToken.exp < date.getTime() / 1000) {\r\n                try {\r\n                    const newAccessToken = getData(await refreshToken(user));\r\n                    const newUser = {\r\n                        ...user,\r\n                        accessToken: newAccessToken.accessToken\r\n                    }\r\n                    dispatch(stateSuccess(newUser))\r\n                    config.headers['Authorization'] = `Bearer ${newAccessToken.accessToken}`;\r\n                } catch (error) {\r\n                    let msg = error?.response?.data?.details?.message || \"Hết phiên đăng nhập\"\r\n                    toast.error(msg);\r\n                    dispatch(logoutSuccess())\r\n                }\r\n\r\n            } else {\r\n                config.headers['Authorization'] = `Bearer ${user.accessToken}`;\r\n            }\r\n\r\n            return config;\r\n        },\r\n        err => {\r\n            return Promise.reject(err)\r\n        }\r\n    );\r\n    return newInstance;\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}