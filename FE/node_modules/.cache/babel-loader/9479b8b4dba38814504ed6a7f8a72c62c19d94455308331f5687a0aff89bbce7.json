{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport authReducer from \"./authSlice\";\nimport modalReducer from \"./modalSlice\";\nimport messageReducer from \"./messageSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport languageSlice from \"./languageSlice\";\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  modal: modalReducer,\n  message: messageReducer,\n  lang: languageSlice\n});\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","authReducer","modalReducer","messageReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","languageSlice","rootReducer","auth","modal","message","lang","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/hongdinh/Code/GitHub_Clone/nhom3_webdocsach/FE/src/redux/store.js"],"sourcesContent":["import { configureStore,combineReducers } from \"@reduxjs/toolkit\"\r\nimport authReducer from \"./authSlice\"\r\nimport modalReducer from \"./modalSlice\"\r\nimport messageReducer from \"./messageSlice\"\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport languageSlice from \"./languageSlice\"\r\n\r\nconst rootReducer=combineReducers({auth: authReducer,modal: modalReducer,message:messageReducer,lang:languageSlice})\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport let persistor = persistStore(store)"],"mappings":"AAAA,SAASA,cAAc,EAACC,eAAe,QAAQ,kBAAkB;AACjE,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,YAAY,MAAM,cAAc;AACvC,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACL,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,WAAW,GAACf,eAAe,CAAC;EAACgB,IAAI,EAAEf,WAAW;EAACgB,KAAK,EAAEf,YAAY;EAACgB,OAAO,EAACf,cAAc;EAACgB,IAAI,EAACL;AAAa,CAAC,CAAC;AAEpH,MAAMM,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVV;AACJ,CAAC;AACD,MAAMW,gBAAgB,GAAGlB,cAAc,CAACe,aAAa,EAAEL,WAAW,CAAC;AAEnE,OAAO,MAAMS,KAAK,GAAGzB,cAAc,CAAC;EAClC0B,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACvB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAImB,SAAS,GAAG1B,YAAY,CAACoB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}