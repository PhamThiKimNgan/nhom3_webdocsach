{"ast":null,"code":"var _jsxFileName = \"/Users/hongdinh/Code/GitHub_Clone/nhom3_webdocsach/FE/src/views/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport apiMain from '../api/apiMain';\nimport { loginSuccess } from '../redux/authSlice';\nimport { useEffect, useState } from 'react';\n//Component tạo một định tuyến an toàn, khi muốn truy cập các đường dẫn cần có xác thực thì phải đi qua route này\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  roles\n}) => {\n  _s();\n  const [auth, setAuth] = useState(null);\n  let location = useLocation();\n  const user = useSelector(state => {\n    var _state$auth$login;\n    return (_state$auth$login = state.auth.login) === null || _state$auth$login === void 0 ? void 0 : _state$auth$login.user;\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const verify = async () => {\n      if (user) {\n        const veri = await apiMain.verifyToken(user, dispatch, loginSuccess);\n        console.log(veri);\n        if ((veri === null || veri === void 0 ? void 0 : veri.status) !== 200) {\n          toast.warning(\"Phiên làm việc của bạn đã hết. Vui lòng đăng nhập lại\", {\n            autoClose: 1000,\n            pauseOnHover: false,\n            hideProgressBar: true\n          });\n          setAuth(false);\n        }\n        const tokenDecode = jwt_decode(user === null || user === void 0 ? void 0 : user.refreshToken);\n        let date = new Date();\n        if (tokenDecode.exp < date.getTime() / 1000) {\n          toast.warning(\"Phiên làm việc của bạn đã hết. Vui lòng đăng nhập lại\", {\n            autoClose: 1000,\n            pauseOnHover: false,\n            hideProgressBar: true\n          });\n          setAuth(false);\n          return;\n        }\n        const userHasRequiredRole = roles.includes(user.roles[0]) ? true : false;\n        if (!userHasRequiredRole) {\n          toast.warning(\"Bạn không có quyền truy cập\", {\n            autoClose: 1000,\n            pauseOnHover: false,\n            hideProgressBar: true\n          });\n          setAuth(false);\n          return;\n        }\n        setAuth(true);\n      } else {\n        toast.warning(\"Bạn chưa đăng nhập\", {\n          autoClose: 1000,\n          pauseOnHover: false\n        });\n        setAuth(false);\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          state: {\n            from: location\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this);\n      }\n    };\n    verify();\n  }, []);\n  if (auth === null) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return auth === true ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    state: {\n      from: location\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 41\n  }, this);\n};\n_s(PrivateRoute, \"26F3u4x9D/M5kecOXj+Cjt7F0G0=\", false, function () {\n  return [useLocation, useSelector, useDispatch];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useDispatch","useSelector","Navigate","Outlet","useLocation","jwt_decode","toast","apiMain","loginSuccess","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateRoute","roles","_s","auth","setAuth","location","user","state","_state$auth$login","login","dispatch","verify","veri","verifyToken","console","log","status","warning","autoClose","pauseOnHover","hideProgressBar","tokenDecode","refreshToken","date","Date","exp","getTime","userHasRequiredRole","includes","to","from","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hongdinh/Code/GitHub_Clone/nhom3_webdocsach/FE/src/views/PrivateRoute.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode'\r\nimport { toast } from 'react-toastify';\r\nimport apiMain from '../api/apiMain';\r\nimport { loginSuccess } from '../redux/authSlice';\r\nimport { useEffect, useState } from 'react';\r\n//Component tạo một định tuyến an toàn, khi muốn truy cập các đường dẫn cần có xác thực thì phải đi qua route này\r\nconst PrivateRoute = ({\r\n    roles,\r\n}) => {\r\n    const [auth, setAuth] = useState(null)\r\n    let location = useLocation();\r\n    const user = useSelector(state => state.auth.login?.user);\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const verify = async () => {\r\n            if (user) {\r\n                const veri = await apiMain.verifyToken(user, dispatch, loginSuccess)\r\n                console.log(veri)\r\n                if (veri?.status !== 200) {\r\n                    toast.warning(\"Phiên làm việc của bạn đã hết. Vui lòng đăng nhập lại\", { autoClose: 1000, pauseOnHover: false, hideProgressBar: true })\r\n                    setAuth(false);\r\n                }\r\n                const tokenDecode = jwt_decode(user?.refreshToken)\r\n                let date = new Date();\r\n                if (tokenDecode.exp < date.getTime() / 1000) {\r\n                    toast.warning(\"Phiên làm việc của bạn đã hết. Vui lòng đăng nhập lại\", { autoClose: 1000, pauseOnHover: false, hideProgressBar: true })\r\n                    setAuth(false);\r\n                    return\r\n                }\r\n                const userHasRequiredRole = roles.includes(user.roles[0]) ? true : false\r\n                if (!userHasRequiredRole) {\r\n                    toast.warning(\"Bạn không có quyền truy cập\", { autoClose: 1000, pauseOnHover: false, hideProgressBar: true })\r\n                    setAuth(false);\r\n                    return\r\n                }\r\n\r\n                setAuth(true)\r\n            }\r\n            else {\r\n                toast.warning(\"Bạn chưa đăng nhập\", { autoClose: 1000, pauseOnHover: false })\r\n                setAuth(false)\r\n                return <Navigate to=\"/\" state={{ from: location }} />;\r\n            }\r\n        }\r\n        verify()\r\n    }, [])\r\n    if (auth === null) return <></>\r\n    return auth === true ? <Outlet /> : <Navigate to=\"/\" state={{ from: location }} />;\r\n\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}