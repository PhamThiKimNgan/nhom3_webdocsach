{"ast":null,"code":"var _s = $RefreshSig$();\nimport { loginStart, loginSuccess, loginFalse, logoutSuccess } from \"../redux/authSlice\";\nimport { authInactive } from '../redux/modalSlice';\nimport apiMain from '../api/apiMain';\nimport { setLoading, setMessageLogin, setMessageRegister } from '../redux/messageSlice';\nimport { axiosClient } from '../api/axiosClient';\nimport getData from '../api/getData';\nimport { toast } from \"react-toastify\";\nimport { useDispatch } from \"react-redux\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nconst publicPath = ['/ddd/', '/truyen/'];\nexport const handleLogin = async (user, dispatch, navigate) => {\n  dispatch(setLoading(true));\n  apiMain.login(user).then(res => {\n    dispatch(loginSuccess(getData(res))); //lấy thông tin user\n    toast.success(\"Đăng nhập thành công\", {\n      autoClose: 1200,\n      pauseOnHover: false,\n      hideProgressBar: true\n    }); //hiển thị toast thông báo\n    dispatch(authInactive()); //hành động tắt modal login\n  }) //gọi api login\n  .catch(error => {\n    var _error$response, _error$response$data;\n    dispatch(loginFalse());\n    const msg = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.details;\n    let _ = msg.username || msg.password || msg.active || msg.toString();\n    dispatch(setMessageLogin(_));\n  }).finally(() => {\n    dispatch(setLoading(false));\n  });\n};\nexport const handleRegister = async (params, dispatch, navigate) => {\n  try {\n    dispatch(setLoading(true));\n    const res = await apiMain.register(params); //gọi api login\n    if (res.status == 200) {\n      dispatch(setMessageRegister(\"\"));\n      toast.success(\"Đăng ký thành công. Vui lòng vào email để mở liên kết xác thực tài khoản\", {\n        autoClose: 3000,\n        pauseOnHover: false\n      }); //hiển thị toast thông báo\n      dispatch(authInactive()); //hành động tắt modal register\n    }\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    //console.log(error)\n    const msg = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.details;\n    let _ = msg.email || msg.username || msg.password;\n    console.log(error.response.data);\n    dispatch(setMessageRegister(_));\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\nexport const handleLogout = (dispatch, navigate, location) => {\n  const isPublic = publicPath.findIndex(e => location.pathname.includes(e)) > 0 ? true : false;\n  dispatch(logoutSuccess());\n  toast.success(\"Đăng xuất thành công\", {\n    autoClose: 800,\n    pauseOnHover: false,\n    hideProgressBar: true\n  }); //hiển thị toast thông báo\n  console.log(isPublic);\n  if (!isPublic) navigate('/');\n};\nexport const HandleLogoutWhenError = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  dispatch(logoutSuccess());\n  navigate('/');\n};\n_s(HandleLogoutWhenError, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = HandleLogoutWhenError;\nvar _c;\n$RefreshReg$(_c, \"HandleLogoutWhenError\");","map":{"version":3,"names":["loginStart","loginSuccess","loginFalse","logoutSuccess","authInactive","apiMain","setLoading","setMessageLogin","setMessageRegister","axiosClient","getData","toast","useDispatch","Navigate","useNavigate","publicPath","handleLogin","user","dispatch","navigate","login","then","res","success","autoClose","pauseOnHover","hideProgressBar","catch","error","_error$response","_error$response$data","msg","response","data","details","_","username","password","active","toString","finally","handleRegister","params","register","status","_error$response2","_error$response2$data","email","console","log","handleLogout","location","isPublic","findIndex","e","pathname","includes","HandleLogoutWhenError","_s","_c","$RefreshReg$"],"sources":["/Users/hongdinh/Code/Learn_Code/source-web-truyen-reactJS-Spring/front-end/src/handle/handleAuth.js"],"sourcesContent":["import {loginStart,loginSuccess,loginFalse, logoutSuccess} from \"../redux/authSlice\"\r\nimport {authInactive} from '../redux/modalSlice'\r\nimport apiMain from '../api/apiMain'\r\nimport {setLoading, setMessageLogin,setMessageRegister} from '../redux/messageSlice'\r\nimport {axiosClient} from '../api/axiosClient'\r\nimport getData from '../api/getData'\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { useDispatch } from \"react-redux\"\r\nimport {Navigate, useNavigate} from 'react-router-dom'\r\n\r\nconst publicPath = [\r\n  '/ddd/','/truyen/'\r\n]\r\n\r\nexport const handleLogin =async(user, dispatch,navigate)=>{\r\n    dispatch(setLoading(true));\r\n    apiMain.login(user)\r\n      .then(res=>{\r\n        dispatch(loginSuccess(getData(res))); //lấy thông tin user\r\n        toast.success(\"Đăng nhập thành công\",{autoClose: 1200,pauseOnHover: false,hideProgressBar:true});//hiển thị toast thông báo\r\n        dispatch(authInactive()) //hành động tắt modal login\r\n        }\r\n      ) //gọi api login\r\n      .catch (error =>{\r\n      dispatch(loginFalse());\r\n      const msg=error.response?.data?.details\r\n      let _ = msg.username||msg.password||msg.active||msg.toString()\r\n      dispatch(setMessageLogin(_))\r\n    }).finally(()=>{\r\n      dispatch(setLoading(false));\r\n    })\r\n}\r\n\r\nexport const handleRegister =async(params, dispatch,navigate)=>{\r\n  try {\r\n    dispatch(setLoading(true))\r\n    const res = await apiMain.register(params) //gọi api login\r\n    if(res.status==200){\r\n      dispatch(setMessageRegister(\"\")); \r\n      toast.success(\"Đăng ký thành công. Vui lòng vào email để mở liên kết xác thực tài khoản\",{autoClose: 3000,pauseOnHover: false});//hiển thị toast thông báo\r\n      dispatch(authInactive()) //hành động tắt modal register\r\n    }\r\n  } catch (error) {\r\n    //console.log(error)\r\n    const msg=error.response?.data?.details\r\n    let _ = msg.email||msg.username||msg.password\r\n    console.log(error.response.data)\r\n    dispatch(setMessageRegister(_));\r\n  }\r\n  finally{\r\n    dispatch(setLoading(false))\r\n  }\r\n}\r\n\r\nexport const handleLogout = (dispatch,navigate,location)=>{\r\n  const isPublic = publicPath.findIndex(e=>location.pathname.includes(e))>0?true:false\r\n  dispatch(logoutSuccess())\r\n  toast.success(\"Đăng xuất thành công\",{autoClose: 800,pauseOnHover: false,hideProgressBar: true});//hiển thị toast thông báo\r\n  console.log(isPublic)\r\n  if(!isPublic)\r\n    navigate('/')\r\n}\r\n\r\nexport const HandleLogoutWhenError = ()=>{\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  dispatch(logoutSuccess())\r\n  navigate('/')\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}